bits 16
org 0x7C00

	cli
     
mov ah ,0x02
mov al ,8
mov dl ,0x80
mov dh ,0
mov ch ,0
mov cl ,2
mov bx ,one
int 0x13
jmp one

 
  times (510 - ($ - $$)) db 0
db 0x55, 0xAA

 
  one: 
     
	xor ax,ax
	mov ds,ax
	mov es,ax
	;
	
	;WRITE YOUR CODE HERE
       ; first column
        xor ecx,ecx
       mov edi, 0xB8004
        add edi,0x32 
        inc edi
        a:
        mov al,0xFF
        mov [edi],al
        add edi,0xA0 ;160
       inc ecx
        cmp ecx,24
       jl a
       
       ;second column
	xor ecx,ecx
       mov edi, 0xB8004
        add edi,0x64
        inc edi
        b:
        mov al,0xFF
        mov [edi],al
        add edi,0xA0 ;160
       inc ecx
       cmp ecx,24
       jl b
       
       ;first row
       xor ecx,ecx
       mov edi, 0xB8004
       add edi,0x460
       inc edi 
        c:
        mov al,0xFF
        mov [edi],al
        add edi,2 ;160
       inc ecx
       cmp ecx,75
       jl c
       ;second row
         xor ecx,ecx
       mov edi, 0xB8004
       add edi,0x960
       inc edi
        d:
        mov al,0xFF
        mov [edi],al
        add edi,2 ;160
       inc ecx
       cmp ecx,75
       jl d
       mov ebp,0
       jmp check
       
       first:
         
         mov edi, 0xB8012
         inc ebp
         push ebp
         test ebp,0x01
         jz even
         jnz odd
         
         second:
          mov edi, 0xB8044
         inc ebp 
        push ebp
         test ebp,0x01
         jz even
         jnz odd
         
         third:
           mov edi, 0xB8076
         inc ebp 
        push ebp
         test ebp,0x01
         jz even
         jnz odd
         
      fourth:
        
           mov edi, 0xB8512
         inc ebp 
       push ebp
         test ebp,0x01
         jz even
         jnz odd
         
         fifth:
         
           mov edi, 0xB8544
         inc ebp 
       push ebp
         test ebp,0x01
         jz even
         jnz odd
         
         six:
         
           mov edi, 0xB8576
         inc ebp
       push ebp
        test ebp,0x01
         jz even
         jnz odd
         
         seven:
         
           mov edi, 0xB8A12
         inc ebp
        push ebp
         test ebp,0x01
         jz even
         jnz odd
         
         eight:
         
           mov edi, 0xB8A44
         inc ebp
        push ebp 
         test ebp,0x01
         jz even
         jnz odd
         
         nine:
         
           mov edi, 0xB8A76
         inc ebp
        push ebp
         test ebp,0x01
         jz even
         jnz odd
         
         odd: 
         jmp drawx
         ;add esp , 4 
       
         
         even:
         jmp drawo
         ;add esp , 4
        
         
         next:
      
        pop ebp
         cmp ebp,9
        
         jg end
         
         
          check:
          
         in al,0x64
         and al,0x01
         jz check
         in al,0x60
         cmp al,0x80
         ja check
         cmp al,0x02   ;A
         je first
         cmp al,0x03  ;B
         je second
         cmp al,0x04  ;c
         je third
         cmp al,0x05   ;d
         je fourth
         cmp al,0x06   ;e
         je fifth
         cmp al,0x07   ;f
         je six
         cmp al,0x08   ;g
         je seven
         cmp al,0x09   ;h
         je eight
         cmp al,0x0A   ;i
         je nine
       end:
       ;ret
       jmp kl
       
       ;drawing x
       drawx:
       push edi
      xor ecx,ecx
      xor ebx,ebx
      inc edi
         add ebx,0xA0
         add ebx,2
         
        e:
         
         mov al,0x40
         mov [edi],al
         
         add edi,ebx
         inc ecx
         cmp ecx,7
         jl e
         
         xor ecx,ecx
         xor ebx,ebx
         pop edi
         inc edi
         
         add edi,0x0C
         add ebx,0xA0
         sub ebx,2
         
        f:
         
         mov al,0x40
         mov [edi],al
         add edi,ebx
         inc ecx
         cmp ecx,7
         jl f
         
         jmp next
         
         drawo:
         ;drawing o
         push edi
         xor ecx,ecx
         xor ebx,ebx
         add edi, 0x06
         add edi,0xA0
         inc edi
         add ebx,0xA0
         sub ebx,2
         mov esi,4
         xor edx,edx
         mov edx,2
         
        g:
        push edi
         mov al,0x1F
         mov [edi],al
         add edi,edx
         add edx,esi
         mov [edi],al
         pop edi
         add edi,ebx
         inc ecx
         cmp ecx,3
         jl g
         
         pop edi
         xor ecx,ecx
         xor ebx,ebx
         add edi,0x3AE
         add edi,0x18
         inc edi
         add ebx,0xA0
         add ebx,2
         mov esi,4
         xor edx,edx
         mov edx,2
         
        h:
        push edi
         mov al,0x1F
         mov [edi],al
         add edi,edx
         add edx,esi
         mov [edi],al
         pop edi
         sub edi,ebx
         inc ecx
         cmp ecx,3
         jl h
         jmp next
           
         
kl:
times (0x400000 - 512) db 0

db 	0x63, 0x6F, 0x6E, 0x65, 0x63, 0x74, 0x69, 0x78, 0x00, 0x00, 0x00, 0x02
db	0x00, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
db	0x20, 0x72, 0x5D, 0x33, 0x76, 0x62, 0x6F, 0x78, 0x00, 0x05, 0x00, 0x00
db	0x57, 0x69, 0x32, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x78, 0x04, 0x11
db	0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xE6, 0xB9, 0x49, 0x44, 0x4E, 0x1C
db	0x50, 0xC9, 0xBD, 0x45, 0x83, 0xC5, 0xCE, 0xC1, 0xB7, 0x2A, 0xE0, 0xF2
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00